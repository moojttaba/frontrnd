{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mojtaba/Desktop/biareh-app/src/containers/header.container.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TopToolbar from \"../components/toolbar/top-toolbar.component\";\nimport MainToolbar from \"../components/toolbar/main-toolbar.component\";\nimport ShopToolbar from \"../components/toolbar/nav-toolbar.component\";\nimport DrawerCart from \"../containers/drawer-cart-container\";\n\nfunction ElevationScroll(props) {\n  _s();\n\n  const {\n    children\n  } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n  return /*#__PURE__*/React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\n_s(ElevationScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = ElevationScroll;\nconst useStyles = makeStyles(theme => ({\n  tolbarMargin: { ...theme.mixins.toolbar,\n    marginBottom: \"3em\",\n    marginTop: \"6em\"\n  },\n  AppBar: {\n    boxShadow: \"rgba(0, 0, 0, 0.06) 0px 1px 2px\",\n    borderBottom: `5px solid ${theme.palette.primary.main}`\n  }\n}));\n\nconst Header = props => {\n  _s2();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ElevationScroll, {\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        color: \"secondary\",\n        className: classes.AppBar,\n        children: [/*#__PURE__*/_jsxDEV(TopToolbar, {\n          value: props.value,\n          setValue: props.setValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MainToolbar, {\n          value: props.value,\n          setValue: props.setValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopToolbar, {\n          value: props.value,\n          setValue: props.setValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.tolbarMargin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DrawerCart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Header, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Header;\nexport default Header;\n/*\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport logo from \"../assets/logo.svg\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst useStyles = makeStyles((theme) => ({\n  tolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"3em\",\n    marginTop: \"3em\",\n  },\n  logo: {\n    height: \"5em\",\n  },\n  logoContainer: {\n    padding: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  AppBar: {\n    borderBottom: \"1px solid #e5edec\",\n  },\n\n  tabContainer: {\n    marginLeft: \"auto\",\n  },\n  tab: {\n    ...theme.typography.tab,\n    minWidth: 10,\n    marginLeft: \"25px\",\n  },\n  menu: {\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: 0,\n    color: theme.palette.common.white,\n  },\n  menuItem: {\n    ...theme.typography.tab,\n    opacity: 0.7,\n    \"&:hover\": {\n      opacity: 1,\n    },\n  },\n}));\n\nconst Header = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen(true);\n  };\n\n  const handleMenuItemClick = (event, i) => {\n    setAnchorEl(null);\n    setOpen(false);\n    setSelectedIndex(i);\n  };\n\n  const handleClose = (event) => {\n    setAnchorEl(null);\n    setOpen(false);\n  };\n\n  const menuOptions = [\n    {\n      name: \"با تخفیف\",\n      link: \"/savings\",\n    },\n    {\n      name: \"کم\",\n      link: \"/savings\",\n    },\n    {\n      name: \"زیاد\",\n      link: \"/savings\",\n    },\n  ];\n\n  React.useEffect(() => {\n    if (window.location.pathname === \"/\" && value !== 0) {\n      setValue(0);\n    } else if (window.location.pathname === \"/departments\" && value !== 1) {\n      setValue(1);\n    } else if (window.location.pathname === \"/savings\" && value !== 2) {\n      setValue(2);\n    }\n  }, [value]);\n\n  return (\n    <React.Fragment>\n      <ElevationScroll>\n        <AppBar position=\"fixed\" color=\"secondary\" className={classes.AppBar}>\n          <Toolbar>\n            <img src={logo} alt=\"لگو بیاره\" className={classes.logo} />\n          </Toolbar>\n          <Toolbar disableGutters={false} className={classes.toolbar}>\n            <Button\n              component={Link}\n              to=\"/\"\n              className={classes.logoContainer}\n              onClick={() => setValue(2)}\n              disableRipple\n            ></Button>\n\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              className={classes.tabContainer}\n              indicatorColor=\"primary\"\n            >\n              <Tab\n                className={classes.tab}\n                component={Link}\n                to=\"/\"\n                label=\"فروشگاه\"\n              />\n\n              <Tab\n                className={classes.tab}\n                component={Link}\n                to=\"/departments\"\n                label=\"دسته بندی ها\"\n              />\n              <Tab\n                aria-owns={anchorEl ? \"simple-menu\" : undefined}\n                aria-haspopup={anchorEl ? \"true\" : undefined}\n                className={classes.tab}\n                component={Link}\n                onMouseOver={(event) => handleClick(event)}\n                to=\"/savings\"\n                label=\"با تخفیف\"\n              />\n            </Tabs>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              open={open}\n              onClose={handleClose}\n              MenuListProps={{ onMouseLeave: handleClose }}\n              classes={{ paper: classes.menu }}\n              elevation={0}\n            >\n              {menuOptions.map((option, i) => (\n                <MenuItem\n                  key={option}\n                  classes={{ root: classes.menuItem }}\n                  component={Link}\n                  to={option.link}\n                  onClick={(event) => {\n                    handleMenuItemClick(event, i);\n                    setValue(2);\n                    handleClose();\n                  }}\n                  selected={i === selectedIndex}\n                >\n                  {option.name}\n                </MenuItem>\n              ))}\n            </Menu>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <div className={classes.tolbarMargin} />\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElevationScroll\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"sources":["/Users/mojtaba/Desktop/biareh-app/src/containers/header.container.jsx"],"names":["React","AppBar","useScrollTrigger","makeStyles","TopToolbar","MainToolbar","ShopToolbar","DrawerCart","ElevationScroll","props","children","trigger","disableHysteresis","threshold","cloneElement","elevation","useStyles","theme","tolbarMargin","mixins","toolbar","marginBottom","marginTop","boxShadow","borderBottom","palette","primary","main","Header","classes","value","setValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AAEA,QAAME,OAAO,GAAGT,gBAAgB,CAAC;AAC/BU,IAAAA,iBAAiB,EAAE,IADY;AAE/BC,IAAAA,SAAS,EAAE;AAFoB,GAAD,CAAhC;AAKA,sBAAOb,KAAK,CAACc,YAAN,CAAmBJ,QAAnB,EAA6B;AAClCK,IAAAA,SAAS,EAAEJ,OAAO,GAAG,CAAH,GAAO;AADS,GAA7B,CAAP;AAGD;;GAXQH,e;UAGSN,gB;;;KAHTM,e;AAaT,MAAMQ,SAAS,GAAGb,UAAU,CAAEc,KAAD,KAAY;AACvCC,EAAAA,YAAY,EAAE,EACZ,GAAGD,KAAK,CAACE,MAAN,CAAaC,OADJ;AAEZC,IAAAA,YAAY,EAAE,KAFF;AAGZC,IAAAA,SAAS,EAAE;AAHC,GADyB;AAMvCrB,EAAAA,MAAM,EAAE;AACNsB,IAAAA,SAAS,EAAE,iCADL;AAENC,IAAAA,YAAY,EAAG,aAAYP,KAAK,CAACQ,OAAN,CAAcC,OAAd,CAAsBC,IAAK;AAFhD;AAN+B,CAAZ,CAAD,CAA5B;;AAYA,MAAMC,MAAM,GAAInB,KAAD,IAAW;AAAA;;AACxB,QAAMoB,OAAO,GAAGb,SAAS,EAAzB;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,eAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,OAAjB;AAAyB,QAAA,KAAK,EAAC,WAA/B;AAA2C,QAAA,SAAS,EAAEa,OAAO,CAAC5B,MAA9D;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEQ,KAAK,CAACqB,KAAzB;AAAgC,UAAA,QAAQ,EAAErB,KAAK,CAACsB;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAEtB,KAAK,CAACqB,KAA1B;AAAiC,UAAA,QAAQ,EAAErB,KAAK,CAACsB;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAEtB,KAAK,CAACqB,KAA1B;AAAiC,UAAA,QAAQ,EAAErB,KAAK,CAACsB;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACX;AAAxB;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBD;;IAAMU,M;UACYZ,S;;;MADZY,M;AAkBN,eAAeA,MAAfsourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TopToolbar from \"../components/toolbar/top-toolbar.component\";\nimport MainToolbar from \"../components/toolbar/main-toolbar.component\";\nimport ShopToolbar from \"../components/toolbar/nav-toolbar.component\";\nimport DrawerCart from \"../containers/drawer-cart-container\";\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst useStyles = makeStyles((theme) => ({\n  tolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"3em\",\n    marginTop: \"6em\",\n  },\n  AppBar: {\n    boxShadow: \"rgba(0, 0, 0, 0.06) 0px 1px 2px\",\n    borderBottom: `5px solid ${theme.palette.primary.main}`\n  },\n}));\n\nconst Header = (props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <ElevationScroll>\n        <AppBar position=\"fixed\" color=\"secondary\" className={classes.AppBar}>\n          <TopToolbar value={props.value} setValue={props.setValue}/>\n          <MainToolbar value={props.value} setValue={props.setValue}/>\n          <ShopToolbar value={props.value} setValue={props.setValue}/>\n        </AppBar>\n      </ElevationScroll>\n      <div className={classes.tolbarMargin} />\n      <DrawerCart />\n   \n    </React.Fragment>\n  );\n};\n\nexport default Header;\n\n/*\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport logo from \"../assets/logo.svg\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst useStyles = makeStyles((theme) => ({\n  tolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"3em\",\n    marginTop: \"3em\",\n  },\n  logo: {\n    height: \"5em\",\n  },\n  logoContainer: {\n    padding: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  AppBar: {\n    borderBottom: \"1px solid #e5edec\",\n  },\n\n  tabContainer: {\n    marginLeft: \"auto\",\n  },\n  tab: {\n    ...theme.typography.tab,\n    minWidth: 10,\n    marginLeft: \"25px\",\n  },\n  menu: {\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: 0,\n    color: theme.palette.common.white,\n  },\n  menuItem: {\n    ...theme.typography.tab,\n    opacity: 0.7,\n    \"&:hover\": {\n      opacity: 1,\n    },\n  },\n}));\n\nconst Header = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen(true);\n  };\n\n  const handleMenuItemClick = (event, i) => {\n    setAnchorEl(null);\n    setOpen(false);\n    setSelectedIndex(i);\n  };\n\n  const handleClose = (event) => {\n    setAnchorEl(null);\n    setOpen(false);\n  };\n\n  const menuOptions = [\n    {\n      name: \"با تخفیف\",\n      link: \"/savings\",\n    },\n    {\n      name: \"کم\",\n      link: \"/savings\",\n    },\n    {\n      name: \"زیاد\",\n      link: \"/savings\",\n    },\n  ];\n\n  React.useEffect(() => {\n    if (window.location.pathname === \"/\" && value !== 0) {\n      setValue(0);\n    } else if (window.location.pathname === \"/departments\" && value !== 1) {\n      setValue(1);\n    } else if (window.location.pathname === \"/savings\" && value !== 2) {\n      setValue(2);\n    }\n  }, [value]);\n\n  return (\n    <React.Fragment>\n      <ElevationScroll>\n        <AppBar position=\"fixed\" color=\"secondary\" className={classes.AppBar}>\n          <Toolbar>\n            <img src={logo} alt=\"لگو بیاره\" className={classes.logo} />\n          </Toolbar>\n          <Toolbar disableGutters={false} className={classes.toolbar}>\n            <Button\n              component={Link}\n              to=\"/\"\n              className={classes.logoContainer}\n              onClick={() => setValue(2)}\n              disableRipple\n            ></Button>\n\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              className={classes.tabContainer}\n              indicatorColor=\"primary\"\n            >\n              <Tab\n                className={classes.tab}\n                component={Link}\n                to=\"/\"\n                label=\"فروشگاه\"\n              />\n\n              <Tab\n                className={classes.tab}\n                component={Link}\n                to=\"/departments\"\n                label=\"دسته بندی ها\"\n              />\n              <Tab\n                aria-owns={anchorEl ? \"simple-menu\" : undefined}\n                aria-haspopup={anchorEl ? \"true\" : undefined}\n                className={classes.tab}\n                component={Link}\n                onMouseOver={(event) => handleClick(event)}\n                to=\"/savings\"\n                label=\"با تخفیف\"\n              />\n            </Tabs>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              open={open}\n              onClose={handleClose}\n              MenuListProps={{ onMouseLeave: handleClose }}\n              classes={{ paper: classes.menu }}\n              elevation={0}\n            >\n              {menuOptions.map((option, i) => (\n                <MenuItem\n                  key={option}\n                  classes={{ root: classes.menuItem }}\n                  component={Link}\n                  to={option.link}\n                  onClick={(event) => {\n                    handleMenuItemClick(event, i);\n                    setValue(2);\n                    handleClose();\n                  }}\n                  selected={i === selectedIndex}\n                >\n                  {option.name}\n                </MenuItem>\n              ))}\n            </Menu>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <div className={classes.tolbarMargin} />\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n\n*/\n"]},"metadata":{},"sourceType":"module"}
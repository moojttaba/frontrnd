{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mojtaba/devloperment/biareh-project/frontend/src/containers/sign-up.container.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { googleSignInStart, switchSignUpSignIn, signUpStart } from \"../redux/user/user.actions\";\nimport { CustomizedTextField } from \"../components/custom-textField.component\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500\n  }\n}));\n\nconst SignUp = ({\n  signUpStart,\n  googleSignInStart,\n  switchSignUpSignIn\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        direction: \"column\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\" //onClick={guessSignInStart}\n            ,\n            onClick: googleSignInStart,\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            style: {\n              backgroundColor: \"#3e82f7\"\n            },\n            color: \"primary\",\n            children: \"\\u0648\\u0631\\u0648\\u062F \\u0628\\u0627 \\u06AF\\u0648\\u06AF\\u0644\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          component: \"form\",\n          onSubmit: handleSubmit,\n          spacing: 4,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [\" \", /*#__PURE__*/_jsxDEV(CustomizedTextField, {\n              fullWidth: true,\n              variant: \"outlined\",\n              className: classes.margin,\n              type: \"text\",\n              name: \"displayName\",\n              value: displayName,\n              onChange: handleChange,\n              label: \"\\u0646\\u0627\\u0645 \\u06A9\\u0627\\u0631\\u0628\\u0631\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(CustomizedTextField, {\n              fullWidth: true,\n              variant: \"outlined\",\n              className: classes.margin,\n              type: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: handleChange,\n              label: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(CustomizedTextField, {\n              fullWidth: true,\n              variant: \"outlined\",\n              className: classes.margin,\n              type: \"password\",\n              name: \"password\",\n              value: password,\n              onChange: handleChange,\n              label: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(CustomizedTextField, {\n              className: classes.margin,\n              fullWidth: true,\n              variant: \"outlined\",\n              type: \"password\",\n              name: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: handleChange,\n              label: \"\\u062A\\u0627\\u06CC\\u06CC\\u062F \\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              size: \"large\",\n              children: \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              direction: \"row\",\n              justify: \"center\",\n              alignItems: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: [\"\\u0622\\u06CC\\u0627 \\u0627\\u06A9\\u0627\\u0646\\u062A \\u062F\\u0627\\u0631\\u06CC\\u062F\\u061F\", /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  onClick: switchSignUpSignIn,\n                  children: \"\\u0648\\u0631\\u0648\\u062F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"IvxNmBZivip+d8AFXbidneNgr4w=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  switchSignUpSignIn: () => dispatch(switchSignUpSignIn()),\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/mojtaba/devloperment/biareh-project/frontend/src/containers/sign-up.container.jsx"],"names":["React","useState","connect","makeStyles","Grid","Paper","Divider","Typography","Button","googleSignInStart","switchSignUpSignIn","signUpStart","CustomizedTextField","useStyles","theme","root","flexGrow","paper","padding","spacing","margin","maxWidth","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","classes","backgroundColor","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SACEC,iBADF,EAEEC,kBAFF,EAGEC,WAHF,QAIO,4BAJP;AAMA,SAASC,mBAAT,QAAoC,0CAApC;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,MAAM,EAAE,MAFH;AAGLC,IAAAA,QAAQ,EAAE;AAHL;AAJgC,CAAZ,CAAD,CAA5B;;AAWA,MAAMC,MAAM,GAAG,CAAC;AAAEX,EAAAA,WAAF;AAAeF,EAAAA,iBAAf;AAAkCC,EAAAA;AAAlC,CAAD,KAA4D;AAAA;;AACzE,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCvB,QAAQ,CAAC;AACrDwB,IAAAA,WAAW,EAAE,EADwC;AAErDC,IAAAA,KAAK,EAAE,EAF8C;AAGrDC,IAAAA,QAAQ,EAAE,EAH2C;AAIrDC,IAAAA,eAAe,EAAE;AAJoC,GAAD,CAAtD;AAOA,QAAM;AAAEH,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAAoDL,eAA1D;;AAEA,QAAMM,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAIJ,QAAQ,KAAKC,eAAjB,EAAkC;AAChCI,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACA;AACD;;AAEDrB,IAAAA,WAAW,CAAC;AAAEc,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA;AAAtB,KAAD,CAAX;AACD,GATD;;AAWA,QAAMM,YAAY,GAAIH,KAAD,IAAW;AAC9B,UAAM;AAAEI,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBL,KAAK,CAACM,MAA9B;AAEAZ,IAAAA,kBAAkB,CAAC,EAAE,GAAGD,eAAL;AAAsB,OAACW,IAAD,GAAQC;AAA9B,KAAD,CAAlB;AACD,GAJD;;AAMA,QAAME,OAAO,GAAGxB,SAAS,EAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEwB,OAAO,CAACtB,IAAxB;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEsB,OAAO,CAACpB,KAA1B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAC,QAAtC;AAA+C,QAAA,OAAO,EAAC,QAAvD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP,CAEE;AAFF;AAGE,YAAA,OAAO,EAAER,iBAHX;AAIE,YAAA,SAAS,EAAE,IAJb;AAKE,YAAA,OAAO,EAAC,WALV;AAME,YAAA,IAAI,EAAC,OANP;AAOE,YAAA,KAAK,EAAE;AAAE6B,cAAAA,eAAe,EAAE;AAAnB,aAPT;AAQE,YAAA,KAAK,EAAC,SARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF,eAmBE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,SAAS,MAFX;AAGE,UAAA,SAAS,EAAC,MAHZ;AAIE,UAAA,QAAQ,EAAET,YAJZ;AAKE,UAAA,OAAO,EAAE,CALX;AAME,UAAA,SAAS,EAAC,QANZ;AAAA,kCAQE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,uBACG,GADH,eAEE,QAAC,mBAAD;AACE,cAAA,SAAS,EAAE,IADb;AAEE,cAAA,OAAO,EAAC,UAFV;AAGE,cAAA,SAAS,EAAEQ,OAAO,CAACjB,MAHrB;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,IAAI,EAAC,aALP;AAME,cAAA,KAAK,EAAEK,WANT;AAOE,cAAA,QAAQ,EAAEQ,YAPZ;AAQE,cAAA,KAAK,EAAC,mDARR;AASE,cAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAsBE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,mBAAD;AACE,cAAA,SAAS,EAAE,IADb;AAEE,cAAA,OAAO,EAAC,UAFV;AAGE,cAAA,SAAS,EAAEI,OAAO,CAACjB,MAHrB;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,IAAI,EAAC,OALP;AAME,cAAA,KAAK,EAAEM,KANT;AAOE,cAAA,QAAQ,EAAEO,YAPZ;AAQE,cAAA,KAAK,EAAC,gCARR;AASE,cAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtBF,eAmCE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,mBAAD;AACE,cAAA,SAAS,EAAE,IADb;AAEE,cAAA,OAAO,EAAC,UAFV;AAGE,cAAA,SAAS,EAAEI,OAAO,CAACjB,MAHrB;AAIE,cAAA,IAAI,EAAC,UAJP;AAKE,cAAA,IAAI,EAAC,UALP;AAME,cAAA,KAAK,EAAEO,QANT;AAOE,cAAA,QAAQ,EAAEM,YAPZ;AAQE,cAAA,KAAK,EAAC,6CARR;AASE,cAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAnCF,eAgDE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,mBAAD;AACE,cAAA,SAAS,EAAEI,OAAO,CAACjB,MADrB;AAEE,cAAA,SAAS,EAAE,IAFb;AAGE,cAAA,OAAO,EAAC,UAHV;AAIE,cAAA,IAAI,EAAC,UAJP;AAKE,cAAA,IAAI,EAAC,iBALP;AAME,cAAA,KAAK,EAAEQ,eANT;AAOE,cAAA,QAAQ,EAAEK,YAPZ;AAQE,cAAA,KAAK,EAAC,4EARR;AASE,cAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAhDF,eA8DE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,OAAO,EAAC,WAFV;AAGE,cAAA,KAAK,EAAC,SAHR;AAIE,cAAA,SAAS,EAAE,IAJb;AAKE,cAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA9DF,eA0EE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,SAAS,MAApB;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,IAAI,MADN;AAEE,cAAA,SAAS,MAFX;AAGE,cAAA,SAAS,EAAC,KAHZ;AAIE,cAAA,OAAO,EAAC,QAJV;AAKE,cAAA,UAAU,EAAC,QALb;AAAA,qCAOE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,OAApB;AAA4B,gBAAA,KAAK,EAAC,eAAlC;AAAkD,gBAAA,SAAS,EAAC,GAA5D;AAAA,kIAEE,QAAC,MAAD;AAAQ,kBAAA,KAAK,EAAC,SAAd;AAAwB,kBAAA,OAAO,EAAEvB,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA1EF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqHD,CAlJD;;GAAMY,M;UA2BYT,S;;;KA3BZS,M;;AAoJN,MAAMiB,kBAAkB,GAAIC,QAAD,KAAe;AACxC9B,EAAAA,kBAAkB,EAAE,MAAM8B,QAAQ,CAAC9B,kBAAkB,EAAnB,CADM;AAExCD,EAAAA,iBAAiB,EAAE,MAAM+B,QAAQ,CAAC/B,iBAAiB,EAAlB,CAFO;AAGxCE,EAAAA,WAAW,EAAGY,eAAD,IAAqBiB,QAAQ,CAAC7B,WAAW,CAACY,eAAD,CAAZ;AAHF,CAAf,CAA3B;;AAMA,eAAerB,OAAO,CAAC,IAAD,EAAOqC,kBAAP,CAAP,CAAkCjB,MAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport {\n  googleSignInStart,\n  switchSignUpSignIn,\n  signUpStart,\n} from \"../redux/user/user.actions\";\n\nimport { CustomizedTextField } from \"../components/custom-textField.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500,\n  },\n}));\n\nconst SignUp = ({ signUpStart, googleSignInStart, switchSignUpSignIn }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({ displayName, email, password });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2} direction=\"column\" justify=\"center\">\n          <Grid item>\n            <Button\n              type=\"button\"\n              //onClick={guessSignInStart}\n              onClick={googleSignInStart}\n              fullWidth={true}\n              variant=\"contained\"\n              size=\"large\"\n              style={{ backgroundColor: \"#3e82f7\" }}\n              color=\"primary\"\n            >\n              ورود با گوگل\n            </Button>\n          </Grid>\n          <Grid item>\n            <Divider />\n          </Grid>\n\n          <Grid\n            item\n            container\n            component=\"form\"\n            onSubmit={handleSubmit}\n            spacing={4}\n            direction=\"column\"\n          >\n            <Grid item>\n              {\" \"}\n              <CustomizedTextField\n                fullWidth={true}\n                variant=\"outlined\"\n                className={classes.margin}\n                type=\"text\"\n                name=\"displayName\"\n                value={displayName}\n                onChange={handleChange}\n                label=\"نام کاربر\"\n                required\n              />\n            </Grid>\n            <Grid item>\n              <CustomizedTextField\n                fullWidth={true}\n                variant=\"outlined\"\n                className={classes.margin}\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={handleChange}\n                label=\"ایمیل\"\n                required\n              />\n            </Grid>\n            <Grid item>\n              <CustomizedTextField\n                fullWidth={true}\n                variant=\"outlined\"\n                className={classes.margin}\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n                label=\"رمز عبور\"\n                required\n              />\n            </Grid>\n            <Grid item>\n              <CustomizedTextField\n                className={classes.margin}\n                fullWidth={true}\n                variant=\"outlined\"\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={handleChange}\n                label=\"تایید رمز عبور\"\n                required\n              />\n            </Grid>\n\n            <Grid item>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth={true}\n                size=\"large\"\n              >\n                ثبت نام\n              </Button>\n            </Grid>\n\n            <Grid item container>\n              <Grid\n                item\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  آیا اکانت دارید؟\n                  <Button color=\"primary\" onClick={switchSignUpSignIn}>\n                    ورود\n                  </Button>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  switchSignUpSignIn: () => dispatch(switchSignUpSignIn()),\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}